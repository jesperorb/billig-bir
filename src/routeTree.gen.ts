/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminViewBeerLocationsRouteImport } from './routes/admin/view-beer-locations'
import { Route as AdminViewBeerLocationSubmissionsRouteImport } from './routes/admin/view-beer-location-submissions'
import { Route as AdminAddBeerLocationRouteImport } from './routes/admin/add-beer-location'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminViewBeerLocationsRoute = AdminViewBeerLocationsRouteImport.update({
  id: '/view-beer-locations',
  path: '/view-beer-locations',
  getParentRoute: () => AdminRoute,
} as any)
const AdminViewBeerLocationSubmissionsRoute =
  AdminViewBeerLocationSubmissionsRouteImport.update({
    id: '/view-beer-location-submissions',
    path: '/view-beer-location-submissions',
    getParentRoute: () => AdminRoute,
  } as any)
const AdminAddBeerLocationRoute = AdminAddBeerLocationRouteImport.update({
  id: '/add-beer-location',
  path: '/add-beer-location',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/add-beer-location': typeof AdminAddBeerLocationRoute
  '/admin/view-beer-location-submissions': typeof AdminViewBeerLocationSubmissionsRoute
  '/admin/view-beer-locations': typeof AdminViewBeerLocationsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/add-beer-location': typeof AdminAddBeerLocationRoute
  '/admin/view-beer-location-submissions': typeof AdminViewBeerLocationSubmissionsRoute
  '/admin/view-beer-locations': typeof AdminViewBeerLocationsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/add-beer-location': typeof AdminAddBeerLocationRoute
  '/admin/view-beer-location-submissions': typeof AdminViewBeerLocationSubmissionsRoute
  '/admin/view-beer-locations': typeof AdminViewBeerLocationsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/login'
    | '/admin/add-beer-location'
    | '/admin/view-beer-location-submissions'
    | '/admin/view-beer-locations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/login'
    | '/admin/add-beer-location'
    | '/admin/view-beer-location-submissions'
    | '/admin/view-beer-locations'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/login'
    | '/admin/add-beer-location'
    | '/admin/view-beer-location-submissions'
    | '/admin/view-beer-locations'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/view-beer-locations': {
      id: '/admin/view-beer-locations'
      path: '/view-beer-locations'
      fullPath: '/admin/view-beer-locations'
      preLoaderRoute: typeof AdminViewBeerLocationsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/view-beer-location-submissions': {
      id: '/admin/view-beer-location-submissions'
      path: '/view-beer-location-submissions'
      fullPath: '/admin/view-beer-location-submissions'
      preLoaderRoute: typeof AdminViewBeerLocationSubmissionsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/add-beer-location': {
      id: '/admin/add-beer-location'
      path: '/add-beer-location'
      fullPath: '/admin/add-beer-location'
      preLoaderRoute: typeof AdminAddBeerLocationRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminAddBeerLocationRoute: typeof AdminAddBeerLocationRoute
  AdminViewBeerLocationSubmissionsRoute: typeof AdminViewBeerLocationSubmissionsRoute
  AdminViewBeerLocationsRoute: typeof AdminViewBeerLocationsRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAddBeerLocationRoute: AdminAddBeerLocationRoute,
  AdminViewBeerLocationSubmissionsRoute: AdminViewBeerLocationSubmissionsRoute,
  AdminViewBeerLocationsRoute: AdminViewBeerLocationsRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
